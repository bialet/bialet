// Generated automatically from src/bialet.wren. Do not edit.
static const char* bialetModuleSource =
"class Response {\n"
"  static init() {\n"
"    __headers = {\"Content-Type\": \"text/html\"}\n"
"    __status = 200\n"
"    __out = \"\"\n"
"  }\n"
"  static out(out) { __out = __out + \"\\r\\n\" + out }\n"
"  static out() { __out.trim() }\n"
"  static status(status) { __status = status }\n"
"  static status() { __status }\n"
"  static headers() { __headers.keys.map{|k| k + \": \" + __headers[k] + \"\\r\\n\"}.join() }\n"
"  static header(header, value) { __headers[header.trim()] = value.trim() }\n"
"}\n"
"\n"
"class Request {\n"
"  foreign static url()\n"
"  foreign static headers()\n"
"  foreign static get(key)\n"
"  foreign static post(key)\n"
"}\n"
"\n"
"class Cookie {\n"
"  static set(name, value, options) {\n"
"      // TODO Add multiple cookies!\n"
"    Request.header(\"Set-Cookie\", name + \"=\" + value + \"; \" + options.map{|k, v| k + \"=\" + v}.join(\"; \"))\n"
"  }\n"
"  static set(name, value){ set(name, value, {}) }\n"
"}\n"
"\n"
"// TODO: Sessions\n"
"class Session {\n"
"}\n"
"\n"
"class Db {\n"
"  foreign static query(query, params)\n"
"  foreign static lastInsertId()\n"
"  static migrate(version, schema) {\n"
"    if (!Db.one(\"SELECT version FROM _BIALET_MIGRATIONS WHERE version = ?\", version)) {\n"
"      if (Db.query(schema)) {\n"
"        Db.query(\"INSERT INTO _BIALET_MIGRATIONS (version) VALUES (?)\", [version])\n"
"      }\n"
"    }\n"
"  }\n"
"  static query(query) { Db.query(query, []) }\n"
"  static all(query) { Db.query(query, []) }\n"
"  static all(query, params) { Db.query(query, params) }\n"
"  static one(query, params) { Db.all(query + \" limit 1\", params)[0] }\n"
"  static one(query) { Db.one(query, []) }\n"
"  static save(table, values) {\n"
"    Db.all(\"REPLACE INTO \" + table + \"(\" + values.keys.join(\", \") + \") VALUES (\" + values.map{|v| \"? \"}.join() + \")\", values)\n"
"    return Db.lastInsertId()\n"
"  }\n"
"}\n"
"\n"
"Response.init()\n";
